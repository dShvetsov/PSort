/** @file log.h
 * @brief библиотека с описаниями для файла log.c
 */
 
#ifndef ps_log__h
#define ps_log__h
/** @brief Отправить процессу журнала сообщение
 * 
 * Функция отправляет через неименнованный канал данные, которые нужно напечатать в журнал
 * первые два параметра обязательны
 * функция фиксирует время вызова
 * 
 * @param fd Дескриптор неименованным каналом, через который процессы связанны с процессом журнала
 * 
 * @param msgid Идентификатор сообщение.
 * Задается в виде <тип процесса> | <тип сообщеня> | <количество необязательных параметров>
 * 
 */ 
void log_send(int fd, int msgid, ...);

/** @brief сформировать строку времени
 * 
 * функция формирует строку в видет
 * hh:mm:ss dd.mm.yyyy
 * 
 * @param s указатель по которому записывается сформированная строка
 * 
 * @param tim unix-время по которому формируется строка
 *
 */
 
void gettime(char *s, time_t tim);

/**
 * @brief функция процесса журнала
 * 
 * Для функции поражадается отдельный процесс -- Процесс журнала.
 * Все процессы связанны с процессом журнала одним неименованным каналом
 * Процесс журнала последовательно читает из канала информацию
 * формирует из нее строки
 * записывает в файл psort.log
 * 
 * @param in дескриптор неименнового канала, из которого процесс читает
 */
void logger(int in);

/** @brief Типы сообщение*/
enum {
	//! @brief сообщение от manager
	PS_LOG_MANAGER = 0x100000,
	//! @brief сообщение от partitioner
	PS_LOG_PARTITIONER = 0x200000,
	//! @brief сообщение от sorter
	PS_LOG_SORTER = 0x300000,
	//! @brief сообщение от merger
	PS_LOG_MERGER = 0x400000,
	//! @brief процесс запустился
	PS_LOG_RUN = 0x1000,
	//! @brief процесс завершился
	PS_LOG_END = 0x2000,
	//! @brief параметры процесса
	PS_LOG_PARAM = 0x3000,
	//! @brief (сообщение managera) порождение поколение merger'ов
	PS_LOG_BURN = 0x4000,
	//! @brief Итог работы процесса
	PS_LOG_SUMM = 0x5000,
	//! @brief сообщение ошибка
	PS_LOG_ERROR = 0x6000
};
//! @brief макрос определения типа процесса
#define LOGPRTYPE(a) (a & 0x7f00000)
//! @brief макрос оределения типа сообщения
#define LOGMSGTYPE(a) (a & 0xff000)
//! @brief макрос определения количества параметров
#define LOGPRMCNT(a) (a & 0xfff)


/**
 * Тип с помощью которго процессы передают сообщение процессу журнала
 */
typedef union {
	int p;
	time_t t;
} ps_log_prm_t;
 
ps_log_prm_t ps_log_prm[256];

/** 
 * @brief массив, хранящий дескрипторы неименновго канала
 */
extern int ps_log_pipe[2];

#endif
